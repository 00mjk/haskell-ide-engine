jobs:
- job: Linux_installhs_Stack
  timeoutInMinutes: 0
  pool:
    vmImage: ubuntu-16.04
  variables:
    YAML_FILE: install/shake.yaml
  steps:
  - task: Cache@2
    inputs:
      key: '"stack" | "$(Agent.OS)" | $(Build.SourcesDirectory)/$(YAML_FILE) | $(Build.SourcesDirectory)/install/shake.yaml'
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Cache stack-root"
  - bash: |
      mkdir -p $STACK_ROOT
      tar -vxzf .azure-cache/stack-root.tar.gz -C /
      mkdir -p .stack-work
      tar -vxzf .azure-cache/stack-work.tar.gz
      mkdir -p ./install/.stack-work
      tar -vxzf .azure-cache/install-stack-work.tar.gz
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root
      mkdir -p ~/.local/bin
      curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | \
        tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    displayName: Install stack
  - bash: |
      source .azure/linux-stack.bashrc
      stack setup --stack-yaml $(YAML_FILE)
    displayName: Install GHC
  - bash: |
      source .azure/linux-stack.bashrc
      stack --stack-yaml $(YAML_FILE) --install-ghc build --only-dependencies
    displayName: Build dependencies
  - bash: |
      source .azure/linux-stack.bashrc
      stack build --stack-yaml $(YAML_FILE)
    displayName: Build `hie-install`
  - bash: |
      source .azure/linux-stack.bashrc
      stack install.hs help
    displayName: Run help of `install.hs`
  - bash: |
      source .azure/linux-stack.bashrc
      stack install.hs latest
    displayName: Run latest target of `install.hs`
  - bash: |
      mkdir -p .azure-cache
      tar -vczf .azure-cache/stack-root.tar.gz $(cygpath $STACK_ROOT)
      tar -vczf .azure-cache/stack-work.tar.gz .stack-work
      tar -vczf .azure-cache/install-stack-work.tar.gz ./install/.stack-work
    displayName: "Pack cache"
