jobs:
- job: Linux_Cabal
  timeoutInMinutes: 0
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
      ghc-8.8.2:
        GHC_VERSION: "8.8.2"
      ghc-8.6.5:
        GHC_VERSION: "8.6.5"
      ghc-8.4.4:
        GHC_VERSION: "8.4.4"
  variables:
    CABAL_VERSION: "3.0"
    LIQUID_VERSION: "0.8.6.2"
  steps:
  - task: Cache@2
    inputs:
      key: '"cabal" | "$(Agent.OS)" | "$(CABAL_VERSION)" | "$(GHC_VERSION)" | $(Build.SourcesDirectory)/cabal.project | $(Build.SourcesDirectory)/haskell-ide-engine.cabal | $(Build.SourcesDirectory)/hie-plugin-api/hie-plugin-api.cabal'
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Download cache"
  - bash: |
      mkdir -p $HOME/.cabal
      tar -vxzf .azure-cache/cabal-root.tar.gz -C /
      mkdir -p $HOME/.ghc
      tar -vxzf .azure-cache/ghc-root.tar.gz -C /
      mkdir -p dist-newstyle
      tar -vxzf .azure-cache/cabal-dist.tar.gz
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      git submodule sync
      git submodule update --init
    displayName: Sync submodules
  - bash: |
      # To install ghc if they are not yet included in the agent image
      ghc --version || (sudo apt-get update && sudo apt-get install -y ghc-$GHC_VERSION)
    displayName: Install ghc
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-update
      echo "overwrite-policy: always" >> $HOME/.cabal/config
    displayName: Update cabal
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-build --disable-tests --disable-benchmarks --only-dependencies
    displayName: Build dependencies
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-build --disable-tests --disable-benchmarks
    displayName: Build `hie`
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-install  # `hie` binary required locally for tests
    displayName: Install `hie`
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-build --enable-tests --enable-benchmarks --only-dependencies
    displayName: Build Test-dependencies
  - bash: |
      sudo apt update
      sudo apt install z3
    displayName: "Install Runtime Test-Dependencies: z3"
  - bash: |
      source .azure/linux-cabal.bashrc
      cd $(Agent.TempDirectory)
      cabal v2-install liquidhaskell-$LIQUID_VERSION -w /opt/ghc/8.6.5/bin/ghc
    displayName: "Install Runtime Test-Dependencies: liquidhaskell"
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-build hoogle
      cabal v2-exec hoogle generate
    displayName: "Install Runtime Test-Dependencies: hoogle database"
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-test :unit-test
    displayName: "Run Test: unit-test"
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-test :dispatcher-test :plugin-dispatcher-test :wrapper-test
    displayName: "Run Test: dispatcher-test, plugin-dispatcher-test and wrapper-test"
  - bash: |
      source .azure/linux-cabal.bashrc
      cabal v2-test :func-test
    displayName: "Run Test: func-test"
  - bash: |
      mkdir -p .azure-cache
      tar -vczf .azure-cache/cabal-root.tar.gz $HOME/.cabal
      tar -vczf .azure-cache/ghc-root.tar.gz $HOME/.ghc
      tar -vczf .azure-cache/cabal-dist.tar.gz dist-newstyle
    displayName: "Pack cache"